import express from 'express';
import jwt from 'jsonwebtoken';
import dotenv from 'dotenv';
import { verifyAdminToken } from '../middleware/verifyAdmin.js'; // ‚¨ÖÔ∏è —ñ–º–ø–æ—Ä—Ç—É—î–º–æ middleware

dotenv.config();

const router = express.Router();

// üîê POST /api/admin/login
router.post('/login', (req, res) => {
  const { password } = req.body;

  if (!password) {
    return res.status(400).json({ message: '–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å' });
  }

  if (password !== process.env.ADMIN_PANEL_PASSWORD) {
    return res.status(401).json({ message: '–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å' });
  }

  // üîë –ì–µ–Ω–µ—Ä—É—î–º–æ JWT —Ç–æ–∫–µ–Ω
  const token = jwt.sign({ isAdmin: true }, process.env.JWT_SECRET, {
    expiresIn: '2h',
  });

  res.json({ token });
});

// ‚úÖ GET /api/admin/protected ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
router.get('/protected', verifyAdminToken, (req, res) => {
  res.status(200).json({ message: '–¢–æ–∫–µ–Ω –¥—ñ–π—Å–Ω–∏–π. –í–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ.' });
});

export default router;
